name: Fruit & Vegetable Dataset Preprocessing

on:
  push:
    branches: [ main, master ]
    paths:
      - 'preprocessing/**'
      - '.github/workflows/preprocessing.yml'
      - 'requirements.txt'

  pull_request:
    branches: [ main, master ]
    paths:
      - 'preprocessing/**'
      - '.github/workflows/preprocessing.yml'
      - 'requirements.txt'

  workflow_dispatch:
    inputs:
      apply_augmentation:
        description: 'Apply data augmentation to training data'
        required: false
        default: 'true'
        type: boolean
      target_size:
        description: 'Target image size (format: 224x224)'
        required: false
        default: '224x224'
        type: string

env:
  PYTHON_VERSION: 3.9
  KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
  KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}

jobs:
  preprocessing:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-glx libglib2.0-0 libsm6 libxext6 libxrender-dev libgomp1

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up Kaggle credentials
      run: |
        mkdir -p ~/.kaggle
        echo "{\"username\":\"$KAGGLE_USERNAME\",\"key\":\"$KAGGLE_KEY\"}" > ~/.kaggle/kaggle.json
        chmod 600 ~/.kaggle/kaggle.json

    - name: Parse inputs
      id: parse_inputs
      run: |
        echo "AUGMENT=${{ github.event.inputs.apply_augmentation }}" >> $GITHUB_ENV
        echo "TARGET_SIZE=${{ github.event.inputs.target_size }}" >> $GITHUB_ENV

    - name: Run preprocessing
      run: |
        cd preprocessing
        IFS='x' read -r HEIGHT WIDTH <<< "$TARGET_SIZE"
        echo "Height: $HEIGHT, Width: $WIDTH, Augmentation: $AUGMENT"
        echo "from automate_preprocessing import FruitVegetablePreprocessor
height = $HEIGHT
width = $WIDTH
apply_aug = $AUGMENT.lower() == 'true'
preprocessor = FruitVegetablePreprocessor(target_size=(height, width))
processed_data, metadata = preprocessor.run_full_pipeline(save_path='./Eksperimen_Fruit&Veg.ipynb', apply_augmentation=apply_aug)" > run_pipeline.py
        python run_pipeline.py

    - name: Upload outputs
      uses: actions/upload-artifact@v4
      with:
        name: preprocessed-data-${{ github.run_number }}
        path: preprocessing/Eksperimen_Fruit&Veg.ipynb
        retention-days: 30
